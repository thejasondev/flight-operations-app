---
import '../styles/global.css';

interface Props {
	title: string;
}

const { title } = Astro.props;
---

<!doctype html>
<html lang="es">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Panel de Operaciones Aéreas - Aplicación para coordinadores de operaciones de vuelo" />
		<meta name="viewport" content="width=device-width, initial-scale=1.0" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		
		<!-- Mobile compatibility -->
		<meta name="theme-color" content="#3b82f6" />
		<meta name="apple-mobile-web-app-capable" content="yes">
		<meta name="apple-mobile-web-app-status-bar-style" content="black-translucent">
		
		<!-- SEO tags -->
		<meta name="keywords" content="operaciones aéreas, vuelos, coordinación, aerolíneas, aeropuerto" />
		<meta name="author" content="Flight Operations App" />
		<meta property="og:title" content={title} />
		<meta property="og:description" content="Panel de Operaciones Aéreas - Aplicación para coordinadores de operaciones de vuelo" />
		<meta property="og:type" content="website" />
	</head>
	<body class="min-h-screen bg-gray-50 dark:bg-gray-900">
		<slot />
		<script>
			// Extender la interfaz Window para incluir toggleTheme
			declare global {
				interface Window {
					toggleTheme: () => string;
				}
			}

			// Check for dark mode preference
			const theme = (() => {
				if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
					return localStorage.getItem('theme');
				}
				// Cambiado a retornar 'light' por defecto en lugar de usar prefers-color-scheme
				return 'light';
			})();
			
			if (theme === 'dark') {
				document.documentElement.classList.add('dark');
			} else {
				document.documentElement.classList.remove('dark');
			}

			if (typeof localStorage !== 'undefined') {
				localStorage.setItem('theme', theme || 'light');
			}

			// Función para cambiar el tema que estará disponible globalmente
			window.toggleTheme = function() {
				const currentTheme = localStorage.getItem('theme') || 'light';
				const newTheme = currentTheme === 'light' ? 'dark' : 'light';
				
				localStorage.setItem('theme', newTheme);
				
				if (newTheme === 'dark') {
					document.documentElement.classList.add('dark');
				} else {
					document.documentElement.classList.remove('dark');
				}
				
				return newTheme;
			}
		</script>
	</body>
</html>

<style>
	html,
	body {
		margin: 0;
		width: 100%;
		height: 100%;
	}
</style>
